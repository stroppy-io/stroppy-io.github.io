# This file is a template, and might need editing before it works on your project.
# To contribute improvements to CI/CD templates, please follow the Development guide at:
# https://docs.gitlab.com/ee/development/cicd/templates.html
# This specific template is located at:
# https://gitlab.com/gitlab-org/gitlab/-/blob/master/lib/gitlab/ci/templates/Docker.gitlab-ci.yml

# Build a Docker image with CI/CD and push to the GitLab registry.
# Docker-in-Docker documentation: https://docs.gitlab.com/ee/ci/docker/using_docker_build.html
#
# This template uses one generic job with conditional builds
# for the default branch and all other (MR) branches.
default:
  tags:
    - devops-shell

variables:
  JEKYLL_VERSION: "latest"
  SITE_SRC: "source"
  SITE_HTML: "html"

stages:
  - build
  - pack
  - deploy

stroppy-build:
  image: jekyll/jekyll:$JEKYLL_VERSION
  stage: build
  tags:
    - docker
  script:
    - cd $SITE_SRC
    - apk add imagemagick
    - jekyll build -d ../$SITE_HTML
    #workaroaund
    - 'sed -i "s/\/assets\/js\/search-data.json/\/ru\/assets\/js\/search-data.json/g" ../$SITE_HTML/ru/assets/js/just-the-docs.js'
  only:
    - main
    - /^hotfix-/
  except:
    changes:
      - ".gitlab-ci.yml"
      - "*.md"

  artifacts:
    expire_in: 5m
    paths:
      - $SITE_HTML

stroppy-pack:
  stage: pack
  only:
    - main
    - /^hotfix-/
  except:
    changes:
      - ".gitlab-ci.yml"
      - "*.md"
  needs:
    - stroppy-build
  before_script:
    - FNAME="stroppy-$(date +%Y%m%d%H%M).tgz"

  script:
    #pack
    - echo "FNAME=$FNAME" > .vars
    - cd $SITE_HTML
    - echo "$FNAME" > .VERSION
    - tar -cvzf ../$FNAME ./
    #upload to binary
    - 'curl --fail -H "Authorization: Basic ${WWW_RAW_RW}" --upload-file ../$FNAME https://binary.picodata.io/repository/www-raw/$FNAME'
  artifacts:
    expire_in: 24h
    paths:
      - .vars

stroppy-deploy-to-test:
  image: curlimages/curl
  stage: deploy
  only:
    - main
    - /^hotfix-/
  except:
    changes:
      - ".gitlab-ci.yml"
      - "*.md"
  needs:
    - stroppy-pack
  script:
    - source .vars
    # triggering gitlab.com/picodata/infra pipeline to rebuild and deploy docker
    - 'curl -X POST --fail -F token=$PIPELINE_TOKEN -F ref=main -F "variables[STROPPY]=$FNAME" -F "variables[STAGE]=TEST" https://git.picodata.io/api/v4/projects/46/trigger/pipeline'

stroppy-deploy-to-prod:
  image: curlimages/curl
  stage: deploy
  only:
    - main
    - /^hotfix-/
  except:
    changes:
      - ".gitlab-ci.yml"
      - "*.md"
  needs:
    - stroppy-pack
  when: manual
  script:
    - source .vars
    # triggering gitlab.com/picodata/infra pipeline to rebuild and deploy docker
    - 'curl -X POST --fail -F token=$PIPELINE_TOKEN -F ref=main -F "variables[STROPPY]=$FNAME" -F "variables[STAGE]=PROD" https://git.picodata.io/api/v4/projects/46/trigger/pipeline'
